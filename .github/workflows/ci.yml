name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  backend:
    name: Backend · lint & tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Ruff lint
        run: ruff check app tests

      - name: Black formatting
        run: black --check app tests

      - name: mypy type checking
        run: mypy app

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/backend
        run: pytest --maxfail=1 --disable-warnings

  frontend:
    name: Frontend · lint, typecheck, build, unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend-nextjs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Run Vitest unit tests
        run: npm run test -- --run

      - name: Build
        run: npm run build

  e2e:
    name: Frontend · Playwright E2E
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: frontend-nextjs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm run start -- --hostname 0.0.0.0 --port 3000 &

      - name: Wait for server
        run: npx wait-on http://127.0.0.1:3000

      - name: Run Playwright tests
        env:
          NEXT_PUBLIC_API_URL: http://127.0.0.1:3000/api
        run: npm run test:e2e

      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v5
        with:
          name: playwright-report
          path: frontend-nextjs/playwright-report

  docker-compose-validate:
    name: Docker Compose config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Validate docker-compose.yml
        run: docker compose config

  aggregate:
    name: CI summary
    runs-on: ubuntu-latest
    needs: [backend, frontend, e2e, docker-compose-validate]
    steps:
      - name: Mark success
        run: echo "All checks passed"
