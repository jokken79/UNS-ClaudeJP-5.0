FROM python:3.11-slim

# Instalar dependencias del sistema para OCR y procesamiento de imágenes
RUN apt-get update && apt-get install -y \
    # Tesseract OCR para extracción de texto
    tesseract-ocr \
    tesseract-ocr-jpn \
    tesseract-ocr-eng \
    libtesseract-dev \
    # OpenCV y procesamiento de imágenes
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    # PDF processing
    poppler-utils \
    # PostgreSQL
    libpq-dev \
    # Compilación
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Crear directorio de la aplicación
WORKDIR /app

# OPTIMIZACIÓN: Copiar solo requirements.txt primero para aprovechar Docker layer cache
COPY requirements.txt .

# OPTIMIZACIÓN: Usar BuildKit cache mount para reutilizar paquetes descargados
# Esto reduce el tiempo de build de 40 min a 5-8 min en builds subsecuentes
# Para habilitar: DOCKER_BUILDKIT=1 docker compose build
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install -r requirements.txt

# Copiar código de la aplicación (después de instalar dependencias)
COPY . .

# Crear directorios necesarios
RUN mkdir -p /app/uploads /app/logs /app/config

# Crear usuario no-root para seguridad
RUN addgroup --system --gid 1001 app && \
    adduser --system --uid 1001 --gid 1001 app

# Dar permisos al usuario app
RUN chown -R app:app /app

# Cambiar a usuario no-root
USER app

# Exponer puerto
EXPOSE 8000

# Comando para ejecutar la aplicación
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
